/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cl.duoc.swingapp.view.window;

import cl.duoc.swingapp.view.entity.UserView;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Optional;

/**
 * @author cmartinezs
 */
public class UserPanel extends javax.swing.JPanel {

  /** Creates new form UserPanel */
  public UserPanel() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    panelTitle = new javax.swing.JLabel();
    panelButtons = new javax.swing.JPanel();
    buttonNew = new javax.swing.JButton();
    buttonEdit = new javax.swing.JButton();
    buttonDelete = new javax.swing.JButton();
    buttonRefresh = new javax.swing.JButton();
    scrollPaneTableUsers = new javax.swing.JScrollPane();
    tableUsers = new javax.swing.JTable();

    panelTitle.setFont(new java.awt.Font("Liberation Sans", Font.BOLD, 36)); // NOI18N
    panelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    panelTitle.setText("Panel de registro de usuarios");

    buttonNew.setFont(new java.awt.Font("Liberation Sans", Font.BOLD, 15)); // NOI18N
    buttonNew.setText("Nuevo");

    buttonEdit.setFont(new java.awt.Font("Liberation Sans", Font.BOLD, 15)); // NOI18N
    buttonEdit.setText("Editar");

    buttonDelete.setFont(new java.awt.Font("Liberation Sans", Font.BOLD, 15)); // NOI18N
    buttonDelete.setText("Eliminar");

    buttonRefresh.setFont(new java.awt.Font("Liberation Sans", Font.BOLD, 15)); // NOI18N
    buttonRefresh.setText("Recargar");

    javax.swing.GroupLayout panelButtonsLayout = new javax.swing.GroupLayout(panelButtons);
    panelButtons.setLayout(panelButtonsLayout);
    panelButtonsLayout.setHorizontalGroup(
        panelButtonsLayout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                panelButtonsLayout
                    .createSequentialGroup()
                    .addGap(213, 213, 213)
                    .addComponent(buttonNew)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonEdit)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonDelete)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonRefresh)
                    .addContainerGap(165, Short.MAX_VALUE)));

    panelButtonsLayout.linkSize(
        javax.swing.SwingConstants.HORIZONTAL,
        new java.awt.Component[] {buttonDelete, buttonEdit, buttonNew, buttonRefresh});

    panelButtonsLayout.setVerticalGroup(
        panelButtonsLayout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                panelButtonsLayout
                    .createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addGroup(
                        panelButtonsLayout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(buttonNew)
                            .addComponent(buttonEdit)
                            .addComponent(buttonDelete)
                            .addComponent(buttonRefresh))
                    .addContainerGap(17, Short.MAX_VALUE)));

    tableUsers.setModel(
        new javax.swing.table.DefaultTableModel(
            new Object[][] {
              {null, null, null},
              {null, null, null},
              {null, null, null},
              {null, null, null}
            },
            new String[] {"ID", "Nombre de Usuario", "Correo Electrónico´"}) {
          Class[] types =
              new Class[] {java.lang.Long.class, java.lang.String.class, java.lang.String.class};
          boolean[] canEdit = new boolean[] {false, false, false};

          public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
          }

          public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
          }
        });
    tableUsers.setColumnSelectionAllowed(true);
    scrollPaneTableUsers.setViewportView(tableUsers);
    tableUsers
        .getColumnModel()
        .getSelectionModel()
        .setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    if (tableUsers.getColumnModel().getColumnCount() > 0) {
      tableUsers.getColumnModel().getColumn(0).setResizable(false);
      tableUsers.getColumnModel().getColumn(1).setResizable(false);
      tableUsers.getColumnModel().getColumn(2).setResizable(false);
    }

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(
                                panelTitle,
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                            .addComponent(
                                panelButtons,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                            .addComponent(
                                scrollPaneTableUsers, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addContainerGap()));
    layout.setVerticalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addComponent(
                        panelTitle,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        60,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        panelButtons,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE)
                    .addComponent(
                        scrollPaneTableUsers,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()));
  } // </editor-fold>//GEN-END:initComponents

  private DefaultTableModel getTableModel() {
    return (DefaultTableModel) tableUsers.getModel();
  }

  private Object[] createTableRow(UserView user) {
    return new Object[] {user.getId(), user.getUsername(), user.getEmail()};
  }

  public void addNewUserListener(ActionListener l) {
    buttonNew.addActionListener(l);
  }

  public void addEditUserListener(ActionListener l) {
    buttonEdit.addActionListener(l);
  }

  public void addDeleteUserListener(ActionListener l) {
    buttonDelete.addActionListener(l);
  }

  public void addRefreshUserListener(ActionListener l) {
    buttonRefresh.addActionListener(l);
  }

  public Optional<Long> getSelectedUserId() {
    int row = tableUsers.getSelectedRow();
    return row < 0 ? Optional.empty() : Optional.ofNullable((Long) getTableModel().getValueAt(row, 0));
  }

  public void setTableData(List<UserView> users) {
    DefaultTableModel tableModel = getTableModel();
    tableModel.setRowCount(0);
    users.stream().map(this::createTableRow).forEach(tableModel::addRow);
  }

  public void showError(String msg) {
    JOptionPane.showMessageDialog(this, msg, "Error", JOptionPane.ERROR_MESSAGE);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonDelete;
  private javax.swing.JButton buttonEdit;
  private javax.swing.JButton buttonNew;
  private javax.swing.JButton buttonRefresh;
  private javax.swing.JPanel panelButtons;
  private javax.swing.JLabel panelTitle;
  private javax.swing.JScrollPane scrollPaneTableUsers;
  private javax.swing.JTable tableUsers;
  // End of variables declaration//GEN-END:variables
}
