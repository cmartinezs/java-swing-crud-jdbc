/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cl.duoc.swingapp.view.window;

import cl.duoc.swingapp.view.entity.UserView;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Optional;

/**
 * @author cmartinezs
 */
public class UserPanel extends javax.swing.JPanel {
  private Long userId;

  /** Creates new form UserPanel */
  public UserPanel() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitle = new javax.swing.JLabel();
        scrollPaneTableUsers = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        panelForm = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblPasswordRepeat = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordRepeat = new javax.swing.JPasswordField();
        buttonDelete = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonNew = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        panelTitle.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        panelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelTitle.setText("Panel de registro de usuarios");

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre de Usuario", "Correo Electrónico´"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableUsers.getTableHeader().setResizingAllowed(false);
        tableUsers.getTableHeader().setReorderingAllowed(false);
        scrollPaneTableUsers.setViewportView(tableUsers);
        tableUsers.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tableUsers.getColumnModel().getColumnCount() > 0) {
            tableUsers.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        lblUsername.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lblUsername.setText("Nombre de Usuario");

        txtUsername.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtUsername.setText(" ");

        lblPassword.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lblPassword.setText("Contraseña");

        lblPasswordRepeat.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lblPasswordRepeat.setText("Repetir Contraseña");

        lblEmail.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lblEmail.setText("Correo Electrónico");

        txtEmail.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtEmail.setText(" ");

        txtPassword.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        txtPasswordRepeat.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        javax.swing.GroupLayout panelFormLayout = new javax.swing.GroupLayout(panelForm);
        panelForm.setLayout(panelFormLayout);
        panelFormLayout.setHorizontalGroup(
            panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsername)
                    .addComponent(txtPassword)
                    .addComponent(txtPasswordRepeat)
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFormLayout.createSequentialGroup()
                        .addGroup(panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPassword)
                                .addComponent(lblPasswordRepeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblEmail))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelFormLayout.setVerticalGroup(
            panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPasswordRepeat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPasswordRepeat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        buttonDelete.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        buttonDelete.setText("Eliminar");

        buttonEdit.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        buttonEdit.setText("Editar");

        buttonNew.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        buttonNew.setText("Nuevo");

        buttonRefresh.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        buttonRefresh.setText("Recargar");

        btnSave.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnSave.setText("Guardar");

        btnCancel.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnCancel.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonRefresh)
                                .addGap(134, 134, 134)
                                .addComponent(buttonNew))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(116, 116, 116)
                                    .addComponent(buttonEdit)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonDelete))
                                .addComponent(scrollPaneTableUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel)
                                .addGap(6, 6, 6))
                            .addComponent(panelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonDelete, buttonEdit, buttonNew, buttonRefresh});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPaneTableUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(panelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

  private DefaultTableModel getTableModel() {
    return (DefaultTableModel) tableUsers.getModel();
  }

  private Object[] createTableRow(UserView user) {
    return new Object[] {user.getId(), user.getUsername(), user.getEmail()};
  }

  public void addNewUserListener(ActionListener l) {
    buttonNew.addActionListener(l);
  }

  public void addEditUserListener(ActionListener l) {
    buttonEdit.addActionListener(l);
  }

  public void addDeleteUserListener(ActionListener l) {
    buttonDelete.addActionListener(l);
  }

  public void addRefreshUserListener(ActionListener l) {
    buttonRefresh.addActionListener(l);
  }

  public void addSaveUserListener(ActionListener l) {
    btnSave.addActionListener(l);
  }

  public void addCancelUserListener(ActionListener l) {
    btnCancel.addActionListener(l);
  }

  public Optional<Long> getSelectedUserId() {
    int row = tableUsers.getSelectedRow();
    return row < 0
        ? Optional.empty()
        : Optional.ofNullable((Long) getTableModel().getValueAt(row, 0));
  }

  public void setTableData(List<UserView> users) {
    DefaultTableModel tableModel = getTableModel();
    tableModel.setRowCount(0);
    users.stream().map(this::createTableRow).forEach(tableModel::addRow);
  }

  public void showError(String msg) {
    JOptionPane.showMessageDialog(this, msg, "Error", JOptionPane.ERROR_MESSAGE);
  }

  public void showInfoMessage(String msg) {
    JOptionPane.showMessageDialog(this, msg, "Información", JOptionPane.INFORMATION_MESSAGE);
  }

  public int showConfirmDialog(String msg) {
    return JOptionPane.showConfirmDialog(this, msg, "Confirmación", JOptionPane.YES_NO_OPTION);
  }

  public UserView getUserView() {
    String username = txtUsername.getText().trim();
    String password = new String(txtPassword.getPassword()).trim();
    String email = txtEmail.getText().trim();
    return new UserView(userId, username, password, email);
  }

  public void setUserView(UserView userView) {
    if (userView == null) {
      txtUsername.setText("");
      txtPassword.setText("");
      txtEmail.setText("");
      return;
    }
    userId = userView.getId();
    txtUsername.setText(userView.getUsername());
    txtPassword.setText(userView.getPassword());
    txtEmail.setText(userView.getEmail());
  }

  public void cleanUserForm() {
    userId = null;
    txtUsername.setText("");
    txtPassword.setText("");
    txtPasswordRepeat.setText("");
    txtEmail.setText("");
  }

  public void disabledUserForm() {
    txtUsername.setEnabled(false);
    txtPassword.setEnabled(false);
    txtPasswordRepeat.setEnabled(false);
    txtEmail.setEnabled(false);
    lblUsername.setEnabled(false);
    lblPassword.setEnabled(false);
    lblPasswordRepeat.setEnabled(false);
    lblEmail.setEnabled(false);
    btnSave.setEnabled(false);
    btnCancel.setEnabled(false);
    buttonNew.setEnabled(true);
    buttonEdit.setEnabled(true);
    buttonDelete.setEnabled(true);
    buttonRefresh.setEnabled(true);
    tableUsers.setEnabled(true);
    tableUsers.getTableHeader().setEnabled(true);
  }

  public void enabledUserForm() {
    txtUsername.setEnabled(true);
    txtPassword.setEnabled(true);
    txtPasswordRepeat.setEnabled(true);
    txtEmail.setEnabled(true);
    lblUsername.setEnabled(true);
    lblPassword.setEnabled(true);
    lblPasswordRepeat.setEnabled(true);
    lblEmail.setEnabled(true);
    btnSave.setEnabled(true);
    btnCancel.setEnabled(true);
    buttonNew.setEnabled(false);
    buttonEdit.setEnabled(false);
    buttonDelete.setEnabled(false);
    buttonRefresh.setEnabled(false);
    tableUsers.setEnabled(false);
    tableUsers.getTableHeader().setEnabled(false);
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonNew;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordRepeat;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel panelForm;
    private javax.swing.JLabel panelTitle;
    private javax.swing.JScrollPane scrollPaneTableUsers;
    private javax.swing.JTable tableUsers;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordRepeat;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
